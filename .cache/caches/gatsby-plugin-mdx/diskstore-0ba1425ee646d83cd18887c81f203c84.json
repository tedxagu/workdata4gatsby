{"expireTime":9007200854820447000,"key":"gatsby-plugin-mdx-entire-payload-9866c2bb0d1eb8c6cbd34d6d3ca71703-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Time Schedule will be the following lineup.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":44,"offset":44},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":44,"offset":44},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":4,"column":1,"offset":46},"end":{"line":4,"column":4,"offset":49},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Time Schedule","position":{"start":{"line":6,"column":7,"offset":57},"end":{"line":6,"column":20,"offset":70},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":51},"end":{"line":6,"column":20,"offset":70},"indent":[]}},{"type":"jsx","value":"<p>Introduction 12:00~</p>","position":{"start":{"line":9,"column":1,"offset":73},"end":{"line":9,"column":27,"offset":99},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Speakers","position":{"start":{"line":11,"column":1,"offset":101},"end":{"line":11,"column":9,"offset":109},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":101},"end":{"line":11,"column":9,"offset":109},"indent":[]}},{"type":"jsx","value":"<p><b>Misaki Tanaka</b>    12:05~12:20 </p>","position":{"start":{"line":13,"column":1,"offset":111},"end":{"line":13,"column":44,"offset":154},"indent":[]}},{"type":"jsx","value":"<p><b>Kawasaki</b>    12:20~12:35 </p>","position":{"start":{"line":16,"column":1,"offset":157},"end":{"line":16,"column":39,"offset":195},"indent":[]}},{"type":"jsx","value":"<p><b>Sheila Cliffe</b>      12:35~12:50</p>","position":{"start":{"line":19,"column":1,"offset":198},"end":{"line":19,"column":45,"offset":242},"indent":[]}},{"type":"jsx","value":" <small>Break Time 5min</small>\n ","position":{"start":{"line":22,"column":1,"offset":245},"end":{"line":23,"column":2,"offset":278},"indent":[1]}},{"type":"jsx","value":"<p><b>Eric Matsunaga</b>   13:00~13:15 </p>","position":{"start":{"line":25,"column":1,"offset":280},"end":{"line":25,"column":44,"offset":323},"indent":[]}},{"type":"jsx","value":"<p><b>Kuniharu Higano</b>13:15~13:30 </p>","position":{"start":{"line":28,"column":1,"offset":326},"end":{"line":28,"column":42,"offset":367},"indent":[]}},{"type":"jsx","value":"<p><b>iYuta</b>  13:30~13:45 </p>","position":{"start":{"line":31,"column":1,"offset":370},"end":{"line":31,"column":34,"offset":403},"indent":[]}},{"type":"jsx","value":"<small>Break Time 5min</small>","position":{"start":{"line":34,"column":1,"offset":407},"end":{"line":34,"column":31,"offset":437},"indent":[]}},{"type":"jsx","value":"<p><b>Tomimasu</b>13:55~14:10</p>","position":{"start":{"line":37,"column":1,"offset":440},"end":{"line":37,"column":34,"offset":473},"indent":[]}},{"type":"jsx","value":"<p><b>Mori </b>14:10~14:25</p>","position":{"start":{"line":41,"column":1,"offset":477},"end":{"line":41,"column":31,"offset":507},"indent":[]}},{"type":"jsx","value":"<p><b>Aiko Yajima</b>14:25~14:40</p>","position":{"start":{"line":45,"column":1,"offset":511},"end":{"line":45,"column":37,"offset":547},"indent":[]}},{"type":"jsx","value":"<p><b>Sennosuke Kataoka</b>  14:40~14:55</p>","position":{"start":{"line":49,"column":1,"offset":551},"end":{"line":49,"column":45,"offset":595},"indent":[]}},{"type":"jsx","value":"<p><b>Talk Session</b> 15:00~15:55</p>","position":{"start":{"line":53,"column":1,"offset":599},"end":{"line":53,"column":39,"offset":637},"indent":[]}},{"type":"jsx","value":"<p>Close 15:55~16:00</p>","position":{"start":{"line":57,"column":1,"offset":641},"end":{"line":57,"column":25,"offset":665},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":60,"column":1,"offset":668},"end":{"line":60,"column":4,"offset":671},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"TEDx AoyamaGakuinU    Time Schedule\",\"description\":\"welcome\",\"date\":\"2019-06-28T00:00:00.000Z\",\"image\":\"./rebeat2.jpg.PNG\",\"banner\":\"./banner.jpg\"}","position":{"start":{"line":62,"column":1,"offset":673},"end":{"line":62,"column":186,"offset":858},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":62,"column":186,"offset":858}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"TEDx AoyamaGakuinU    Time Schedule\",\n  \"description\": \"welcome\",\n  \"date\": \"2019-06-28T00:00:00.000Z\",\n  \"image\": \"./rebeat2.jpg.PNG\",\n  \"banner\": \"./banner.jpg\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Time Schedule will be the following lineup.\"), mdx(\"hr\", null), mdx(\"h5\", null, \"Time Schedule\"), mdx(\"p\", null, \"Introduction 12:00~\"), mdx(\"p\", null, \"Speakers\"), mdx(\"p\", null, mdx(\"b\", null, \"Misaki Tanaka\"), \"    12:05~12:20 \"), mdx(\"p\", null, mdx(\"b\", null, \"Kawasaki\"), \"    12:20~12:35 \"), mdx(\"p\", null, mdx(\"b\", null, \"Sheila Cliffe\"), \"      12:35~12:50\"), mdx(\"small\", null, \"Break Time 5min\"), mdx(\"p\", null, mdx(\"b\", null, \"Eric Matsunaga\"), \"   13:00~13:15 \"), mdx(\"p\", null, mdx(\"b\", null, \"Kuniharu Higano\"), \"13:15~13:30 \"), mdx(\"p\", null, mdx(\"b\", null, \"iYuta\"), \"  13:30~13:45 \"), mdx(\"small\", null, \"Break Time 5min\"), mdx(\"p\", null, mdx(\"b\", null, \"Tomimasu\"), \"13:55~14:10\"), mdx(\"p\", null, mdx(\"b\", null, \"Mori \"), \"14:10~14:25\"), mdx(\"p\", null, mdx(\"b\", null, \"Aiko Yajima\"), \"14:25~14:40\"), mdx(\"p\", null, mdx(\"b\", null, \"Sennosuke Kataoka\"), \"  14:40~14:55\"), mdx(\"p\", null, mdx(\"b\", null, \"Talk Session\"), \" 15:00~15:55\"), mdx(\"p\", null, \"Close 15:55~16:00\"), mdx(\"hr\", null));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"TEDx AoyamaGakuinU    Time Schedule\",\n  \"description\": \"welcome\",\n  \"date\": \"2019-06-28T00:00:00.000Z\",\n  \"image\": \"./rebeat2.jpg.PNG\",\n  \"banner\": \"./banner.jpg\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Time Schedule will be the following lineup.`}</p>\n    <hr></hr>\n    <h5>{`Time Schedule`}</h5>\n    <p>Introduction 12:00~</p>\n    <p>{`Speakers`}</p>\n    <p><b>Misaki Tanaka</b>    12:05~12:20 </p>\n    <p><b>Kawasaki</b>    12:20~12:35 </p>\n    <p><b>Sheila Cliffe</b>      12:35~12:50</p>\n <small>Break Time 5min</small>\n \n    <p><b>Eric Matsunaga</b>   13:00~13:15 </p>\n    <p><b>Kuniharu Higano</b>13:15~13:30 </p>\n    <p><b>iYuta</b>  13:30~13:45 </p>\n    <small>Break Time 5min</small>\n    <p><b>Tomimasu</b>13:55~14:10</p>\n    <p><b>Mori </b>14:10~14:25</p>\n    <p><b>Aiko Yajima</b>14:25~14:40</p>\n    <p><b>Sennosuke Kataoka</b>  14:40~14:55</p>\n    <p><b>Talk Session</b> 15:00~15:55</p>\n    <p>Close 15:55~16:00</p>\n    <hr></hr>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}